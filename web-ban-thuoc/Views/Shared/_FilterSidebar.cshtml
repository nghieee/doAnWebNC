@*
    Partial view for product filter sidebar
    Usage: <partial name="_FilterSidebar" />
*@

<div class="w-full lg:w-64 p-4 bg-white rounded-3 shadow-lg" style="max-height: 900px; overflow-y: auto;">
    <h3 class="text-xl font-bold mb-6 text-gray-800">Bộ lọc sản phẩm</h3>

    <!-- CSS tùy chỉnh cho checkbox, searchbox và thanh cuộn -->
    <style>
        input[type="text"] {
            color: #000000;
            /* Màu đen */
        }

        input[type="text"]::placeholder {
            color: #9ca3af;
            /* Màu xám mặc định, tương ứng text-gray-400 */
        }

        input[type="checkbox"]:checked {
            background-color: #3b82f6 !important;
            /* Màu blue-500 */
            border-color: #3b82f6 !important;
        }

        input[type="checkbox"]:checked:focus {
            background-color: #3b82f6 !important;
            border-color: #3b82f6 !important;
        }

        input[type="text"]:focus {
            outline: none !important;
            /* Bỏ viền đen mặc định */
        }

        /* Tùy chỉnh thanh cuộn */
        .w-full::-webkit-scrollbar {
            width: 6px;
            /* Độ dày mỏng hơn */
        }

        .w-full::-webkit-scrollbar-track {
            background: #f1f1f1;
            /* Màu nền thanh cuộn */
        }

        .w-full::-webkit-scrollbar-thumb {
            background: #888;
            /* Màu thanh cuộn */
            border-radius: 3px;
        }

        .w-full::-webkit-scrollbar-thumb:hover {
            background: #555;
            /* Màu khi hover */
        }

        /* Ẩn mũi tên lên/xuống (chỉ áp dụng cho Webkit) */
        .w-full::-webkit-scrollbar-button {
            display: none;
        }
    </style>

    <!-- Dữ liệu tĩnh -->
    @{
        var filterData = new
        {
            brands = new[] { "Blackmores", "Nature's Way", "DHC" },
            forms = new[] { "Viên uống", "Bột", "Nước" },
            volumes = new[] { "30 viên", "60 viên", "100g" },
            prices = new[] { "Dưới 200.000đ", "200.000đ - 500.000đ", "Trên 500.000đ" },
            audiences = new[] { "Người lớn", "Trẻ em", "Phụ nữ", "Người cao tuổi", "Phụ nữ mang thai" },
            countries = new[] { "Việt Nam", "Hàn Quốc", "Nhật Bản", "Hoa Kỳ", "Úc", "Pháp", "Thái Lan" },
            regions = new[] { "Miền Bắc", "Miền Trung", "Miền Nam" }
        };

        var filters = new
        {
            brands = new List<string>(),
            forms = new List<string>(),
            volumes = new List<string>(),
            prices = new List<string>(),
            audiences = new List<string>(),
            countries = new List<string>(),
            regions = new List<string>()
        };

        var openSections = new
        {
            brands = true,
            forms = true,
            volumes = true,
            prices = true,
            audiences = true,
            countries = true,
            regions = true
        };

        var searchTerms = new
        {
            countries = "",
            audiences = ""
        };
    }

    @{
        var brands = ViewBag.Brands as List<string> ?? new List<string>();
        var forms = ViewBag.Forms as List<string> ?? new List<string>();
        var audiences = ViewBag.Audiences as List<string> ?? new List<string>();
        var countries = ViewBag.Countries as List<string> ?? new List<string>();
        var selectedBrands = Context.Request.Query["brands"].ToList();
        var selectedOrigins = Context.Request.Query["origins"].ToList();
        var selectedPrice = Context.Request.Query["priceRange"].ToString();
    }
    <!-- Thương hiệu -->
    <div class="mb-6">
        <h4 class="text-sm font-semibold text-gray-700 mb-2">Thương hiệu</h4>
        <div>
            @foreach (var brand in brands)
            {
                <label class="d-flex align-items-center gap-2 py-1">
                    <input type="checkbox" name="brands" value="@brand" class="form-check-input"
                        @(selectedBrands.Contains(brand) ? "checked" : "") onchange="this.form.submit()" />
                    <span class="text-sm text-gray-600">@brand</span>
                </label>
            }
        </div>
    </div>

    <!-- Giá tiền -->
    <div class="mb-6">
        <h4 class="text-sm font-semibold text-gray-700 mb-2">Giá tiền</h4>
        <div>
            <label class="d-flex align-items-center gap-2 py-1">
                <input type="radio" name="priceRange" value="1" class="form-check-input" @(selectedPrice == "1" ?
                                                                                                             "checked" : "") onchange="this.form.submit()" />
                <span class="text-sm text-gray-600">Dưới 200.000đ</span>
            </label>
            <label class="d-flex align-items-center gap-2 py-1">
                <input type="radio" name="priceRange" value="2" class="form-check-input" @(selectedPrice == "2" ?
                                                                                                             "checked" : "") onchange="this.form.submit()" />
                <span class="text-sm text-gray-600">200.000đ - 500.000đ</span>
            </label>
            <label class="d-flex align-items-center gap-2 py-1">
                <input type="radio" name="priceRange" value="3" class="form-check-input" @(selectedPrice == "3" ?
                                                                                                             "checked" : "") onchange="this.form.submit()" />
                <span class="text-sm text-gray-600">Trên 500.000đ</span>
            </label>
        </div>
    </div>

    <!-- Nguồn gốc -->
    <div class="mb-6">
        <h4 class="text-sm font-semibold text-gray-700 mb-2">Nguồn gốc</h4>
        <div>
            @foreach (var country in countries)
            {
                <label class="d-flex align-items-center gap-2 py-1">
                    <input type="checkbox" name="origins" value="@country" class="form-check-input"
                        @(selectedOrigins.Contains(country) ? "checked" : "") onchange="this.form.submit()" />
                    <span class="text-sm text-gray-600">@country</span>
                </label>
            }
        </div>
    </div>
</div>

<script>
    // Hàm toggle section
    function toggleSection(section) {
        const sectionElement = document.getElementById(section + 'Section');
        const iconElement = document.getElementById(section + 'Icon');
        if (sectionElement.style.maxHeight === '0px' || sectionElement.style.maxHeight === '') {
            sectionElement.style.maxHeight = '96px';
            sectionElement.style.opacity = '1';
            iconElement.classList.add('rotate-180');
            iconElement.classList.add('text-blue-600');
            iconElement.classList.remove('text-gray-500');
        } else {
            sectionElement.style.maxHeight = '0px';
            sectionElement.style.opacity = '0';
            iconElement.classList.remove('rotate-180');
            iconElement.classList.remove('text-blue-600');
            iconElement.classList.add('text-gray-500');
        }
    }

    // Hàm xử lý checkbox
    document.querySelectorAll('.form-check-input').forEach(checkbox => {
        checkbox.addEventListener('change', function () {
            const category = this.getAttribute('data-category');
            const value = this.getAttribute('data-value');
            const checked = this.checked;
            const filters = JSON.parse(localStorage.getItem('filters') || '{}');
            filters[category] = filters[category] || [];
            if (checked) {
                filters[category].push(value);
            } else {
                filters[category] = filters[category].filter((item: string) => item !== value);
            }
            localStorage.setItem('filters', JSON.stringify(filters));
        });
    });

    // Hàm tìm kiếm
    document.getElementById('audienceSearch').addEventListener('input', function () {
        filterOptions('audiences');
    });
    document.getElementById('countrySearch').addEventListener('input', function () {
        filterOptions('countries');
    });

    function filterOptions(category) {
        const searchInput = document.getElementById(category + 'Search');
        const searchTerm = searchInput.value.toLowerCase();
        const labels = document.querySelectorAll('#' + category + 'Section label');
        labels.forEach(label => {
            const text = label.querySelector('span').textContent.toLowerCase();
            if (text.includes(searchTerm)) {
                label.style.display = 'flex';
            } else {
                label.style.display = 'none';
            }
        });
    }

    // Hàm reset filters
    function resetFilters() {
        document.querySelectorAll('.form-check-input').forEach(checkbox => {
            checkbox.checked = false;
        });
        localStorage.removeItem('filters');
    }

    // Khởi tạo trạng thái từ localStorage
    document.addEventListener('DOMContentLoaded', () => {
        const filters = JSON.parse(localStorage.getItem('filters') || '{}');
        Object.keys(filters).forEach(category => {
            filters[category].forEach((value: string) => {
                const checkbox = document.querySelector(`.form-check-input[data-category="${category}"][data-value="${value}"]`);
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
        });
    });
</script>