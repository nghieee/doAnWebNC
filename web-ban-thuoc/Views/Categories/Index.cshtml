@*
    Trang danh sách sản phẩm theo danh mục
    Usage: <partial name="_CategoryList" /> hoặc truy cập /Categories/CategoryList
*@

@{
    ViewData["Title"] = "Danh mục sản phẩm - Nhà Thuốc Long Châu";
    var products = ViewBag.Products as List<web_ban_thuoc.Models.Product>;
    var category = ViewBag.Category as web_ban_thuoc.Models.Category;
}

<div class="container mx-auto py-6 px-4">
    <div class="row g-6">
        <!-- Bộ lọc bên trái -->
        <div class="col-12 col-lg-3">
            <partial name="_FilterSidebar" />
        </div>

        <!-- Danh sách sản phẩm bên phải -->
        <div class="col-12 col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h4 class="text-black mb-1">@(category?.CategoryName ?? "Danh mục sản phẩm")</h4>
                    <p class="text-muted mb-0" id="product-count">
                        Tìm thấy <span class="fw-semibold">@(products?.Count ?? 0)</span> sản phẩm
                    </p>
                </div>
                <div class="d-flex align-items-center">
                    <span class="me-2 text-muted">Sắp xếp theo:</span>
                    @{
                        var sort = Context.Request.Query["sort"].ToString();
                        string sortActive(string value) => sort == value ? "btn-primary text-white" : "btn-outline-primary";
                    }
                    <button type="button" class="btn @sortActive("") me-2 rounded-5 btn-sort" data-sort="" onclick="sortProducts('')">Bán chạy</button>
                    <button type="button" class="btn @sortActive("price_asc") me-2 rounded-5 btn-sort" data-sort="price_asc" onclick="sortProducts('price_asc')">Giá thấp</button>
                    <button type="button" class="btn @sortActive("price_desc") rounded-5 btn-sort" data-sort="price_desc" onclick="sortProducts('price_desc')">Giá cao</button>
                </div>
            </div>
            
            <!-- Sử dụng partial view để hiển thị danh sách sản phẩm -->
            <partial name="_ProductList" model="products" />
        </div>
    </div>
</div>

<style>
    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .hover-border {
        border: 1px solid transparent;
    }

    .hover-border-blue-500:hover {
        border-color: #3b82f6;
    }
</style>

<script>
function sortProducts(sort) {
    const url = new URL(window.location.href);
    url.searchParams.set('sort', sort);

    // Cập nhật current filters
    if (typeof currentFilters !== 'undefined') {
        currentFilters.sort = sort;
    }

    // Thêm AJAX header
    const headers = {
        'X-Requested-With': 'XMLHttpRequest'
    };

    // Hiển thị loading
    const productList = document.getElementById('product-list');
    productList.innerHTML = '<div class="col-12 text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Đang tải...</span></div></div>';

    fetch(url, { headers })
        .then(res => res.text())
        .then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newList = doc.querySelector('#product-list');
            
            if (newList) {
                productList.innerHTML = newList.innerHTML;
                
                // Cập nhật số lượng sản phẩm
                const productCount = newList.querySelectorAll('.col').length;
                const productCountElement = document.getElementById('product-count');
                if (productCountElement) {
                    productCountElement.innerHTML = `Tìm thấy <span class="fw-semibold">${productCount}</span> sản phẩm`;
                }
            } else {
                productList.innerHTML = '<div class="col-12 text-center text-muted">Không tìm thấy sản phẩm nào.</div>';
                const productCountElement = document.getElementById('product-count');
                if (productCountElement) {
                    productCountElement.innerHTML = 'Tìm thấy <span class="fw-semibold">0</span> sản phẩm';
                }
            }

            // Cập nhật trạng thái active cho các button sort
            document.querySelectorAll('.btn-sort').forEach(btn => {
                btn.classList.remove('btn-primary', 'text-white');
                btn.classList.add('btn-outline-primary');
            });
            const activeBtn = document.querySelector(`.btn-sort[data-sort="${sort}"]`);
            if (activeBtn) {
                activeBtn.classList.remove('btn-outline-primary');
                activeBtn.classList.add('btn-primary', 'text-white');
            }
        })
        .catch(error => {
            console.error('Lỗi khi sắp xếp sản phẩm:', error);
            productList.innerHTML = '<div class="col-12 text-center text-danger">Có lỗi xảy ra khi sắp xếp sản phẩm.</div>';
        });
}
</script>
